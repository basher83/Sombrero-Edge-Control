name: MegaLinter

on:
  pull_request:
    paths:
      - "**/*.md"
      - "**/*.tf"
      - "**/*.hcl"
      - "**/*.yaml"
      - "**/*.yml"
      - "**/*.json"
      - "**/*.sh"
      - "ansible/**"
      - "infrastructure/**"
      - "packer/**"
      - "docs/**"
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  security-events: write
  pull-requests: write

jobs:
  megalinter:
    name: MegaLinter
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: MegaLinter
        id: ml
        uses: oxsecurity/megalinter/flavors/terraform@v8
        continue-on-error: true # Allow workflow to continue even if linting fails
        env:
          # Validate all codebase on every run
          VALIDATE_ALL_CODEBASE: true
          # GitHub token for API operations
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          # Linter configuration is centralized in .mega-linter.yml
          LINTER_RULES_PATH: .github/linters
          SKIP_CLI_LINT_MODES: "project"
          # Report configuration
          PRINT_ALPACA: false
          REPORT_OUTPUT_FOLDER: report
          SARIF_REPORTER: true
          SHOW_ELAPSED_TIME: true
          # Disable auto-fix mode
          APPLY_FIXES: none
          # Non-blocking mode - report errors but don't fail
          DISABLE_ERRORS: true
          # Set error threshold (optional - will fail only if errors exceed this)
          # DISABLE_ERRORS_IF_LESS_THAN: 1000

      - name: Upload SARIF results
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: report/megalinter-report.sarif
          category: code-quality
        continue-on-error: true

      - name: Upload MegaLinter results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: megalinter-results
          path: report/
          retention-days: 30

      - name: Create status check annotation
        if: always() && steps.ml.outcome == 'success'
        run: |
          if [ -f "report/megalinter-report.sarif" ]; then
            echo "::notice title=MegaLinter Status::MegaLinter found issues but workflow continues. Check artifacts."
          else
            echo "::notice title=MegaLinter Status::MegaLinter completed successfully."
          fi

      - name: Fallback linting (if MegaLinter fails)
        if: failure() && steps.ml.outcome == 'failure'
        run: |
          echo "MegaLinter failed, running basic linting checks..."
          # Install basic linters
          pip install --quiet yamllint

          # Run YAML linting
          echo "Running YAML linting..."
          yamllint . --config-file .github/linters/.yamllint.yaml || echo "YAML linting found issues but continuing..."

          # Check for trailing whitespace
          echo "Checking for trailing whitespace..."
          if find . -name "*.yml" -o -name "*.yaml" -o -name "*.md" | xargs grep -l "[[:space:]]$" 2>/dev/null; then
            echo "Found files with trailing whitespace (listed above)"
          else
            echo "No trailing whitespace found"
          fi

          echo "Fallback linting completed"
