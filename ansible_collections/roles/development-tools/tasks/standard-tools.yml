---
# Standard development tools installation using community.general

- name: Update package cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600

- name: Install standard development packages
  ansible.builtin.package:
    name: "{{ devtools_standard_packages }}"
    state: present
  register: package_install_result

- name: Display installed packages
  ansible.builtin.debug:
    msg: "Successfully installed {{ devtools_standard_packages | length }} standard packages"
  when: package_install_result.changed

- name: Ensure Node.js is the correct version
  ansible.builtin.shell: |
    # Install Node.js {{ devtools_nodejs_version }} if not already installed
    current_version=$(node --version 2>/dev/null | cut -d 'v' -f 2 | cut -d '.' -f 1 || echo "0")
    if [ "$current_version" != "{{ devtools_nodejs_version }}" ]; then
      curl -fsSL https://deb.nodesource.com/setup_{{ devtools_nodejs_version }}.x | sudo -E bash -
      apt-get install -y nodejs
    fi
  args:
    creates: "/usr/bin/node"
  register: nodejs_install
  changed_when: "'Reading package lists' in nodejs_install.stdout"

- name: Verify Node.js installation
  ansible.builtin.command: node --version
  register: node_version
  changed_when: false
  failed_when: false

- name: Display Node.js version
  ansible.builtin.debug:
    msg: "Node.js version: {{ node_version.stdout }}"
  when: node_version.rc == 0

- name: Install build dependencies for native modules
  ansible.builtin.package:
    name:
      - build-essential
      - python3-dev
      - libssl-dev
      - libffi-dev
    state: present

- name: Create symbolic links for common commands
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
    force: true
  loop:
    - { src: "/usr/bin/python3", dest: "/usr/local/bin/python" }
    - { src: "/usr/bin/pip3", dest: "/usr/local/bin/pip" }
  failed_when: false

- name: Set up development directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ devtools_user }}"
    group: "{{ devtools_user }}"
    mode: '0755'
  loop:
    - "/home/{{ devtools_user }}/projects"
    - "/home/{{ devtools_user }}/.local/bin"
    - "/home/{{ devtools_user }}/.config"
  become_user: root

- name: Ensure user owns their home directory structure
  ansible.builtin.file:
    path: "/home/{{ devtools_user }}"
    owner: "{{ devtools_user }}"
    group: "{{ devtools_user }}"
    recurse: true
  when: devtools_user != "root"
