---
#SPDX-License-Identifier: MIT
# VM Lifecycle Role - Default Variables

# Primary Operation Configuration
lifecycle_operation: "rollback"  # rollback, cleanup, reset, validate

# Safety and Confirmation Settings
confirm_destructive_operations: true
require_explicit_confirmation: true
dry_run_mode: false
preserve_data: false

# Terraform Project Configuration
terraform_project_path: "infrastructure/environments/production"
terraform_state_file: "terraform.tfstate"
terraform_backend_config: ""
terraform_workspace: "default"

# Infrastructure Targets
rollback_targets:
  - module.jump_man

preserve_resources: []  # Resources to preserve during operations

# Cleanup Configuration
cleanup_artifacts:
  - terraform_state_backup
  - ansible_facts_cache
  - ssh_known_hosts
  - temporary_files

cleanup_locations:
  terraform_cache: ".terraform"
  ansible_cache: "~/.ansible/facts_cache"
  ssh_known_hosts: "~/.ssh/known_hosts"
  temp_directories:
    - "/tmp/ansible-*"
    - "/tmp/terraform-*"

# Backup and Recovery
backup_before_operation: true
backup_location: "/tmp/vm-lifecycle-backups"
backup_retention_days: 7
create_timestamped_backups: true

# State Management
state_management:
  backup_state: true
  validate_drift: true
  auto_correct_drift: false
  state_backup_location: "{{ backup_location }}/terraform-states"
  drift_detection_enabled: true

# Validation Checks
validation_checks:
  - terraform_state_integrity
  - resource_existence
  - configuration_drift
  - network_connectivity

# Rollback Operation Settings
rollback_settings:
  force_destroy: false
  ignore_errors: false
  parallel_destroy: false
  destroy_timeout_minutes: 30
  confirm_each_resource: false

# Reset Operation Settings
reset_settings:
  reset_to_clean_state: true
  preserve_user_data: false
  reset_network_config: true
  restart_services: true
  re_run_cloud_init: false  # Requires careful consideration

# SSH Configuration Cleanup
ssh_cleanup:
  remove_known_hosts_entries: true
  backup_ssh_config: true
  ssh_config_locations:
    - "~/.ssh/known_hosts"
    - "~/.ssh/config"
  host_patterns_to_remove:
    - "{{ ansible_host | default(ansible_default_ipv4.address) | default('') }}"
    - "jump-man"
    - "192.168.10.250"

# Ansible Cache Cleanup
ansible_cleanup:
  clear_facts_cache: true
  clear_inventory_cache: true
  facts_cache_locations:
    - "~/.ansible/facts_cache"
    - "/tmp/ansible_facts_cache"

# File System Cleanup
filesystem_cleanup:
  clean_temp_files: true
  clean_log_files: false  # Preserve logs by default
  temp_file_patterns:
    - "/tmp/ansible-*"
    - "/tmp/terraform-*"
    - "/tmp/*-vm-lifecycle-*"

# Operation Timeouts
timeouts:
  terraform_operation: 1800  # 30 minutes
  confirmation_wait: 300     # 5 minutes
  network_checks: 60         # 1 minute
  backup_operation: 600      # 10 minutes

# Logging and Reporting
logging:
  log_level: "info"
  log_operations: true
  log_file_location: "/tmp/vm-lifecycle.log"
  detailed_logging: false

reporting:
  generate_operation_report: true
  report_format: "json"
  report_location: "{{ backup_location }}/reports"

# Monitoring Integration
monitoring:
  send_notifications: false
  webhook_urls: []
  notification_events:
    - operation_start
    - operation_complete
    - operation_failed

# Safety Constraints
safety_constraints:
  max_resources_per_operation: 50
  require_backup_verification: true
  prevent_production_accidents: true
  double_confirmation_for_production: false

# Environment Detection
environment_detection:
  auto_detect_environment: true
  production_indicators:
    - "prod"
    - "production"
    - "live"
  staging_indicators:
    - "stage"
    - "staging"
    - "test"

# Recovery Settings
recovery_settings:
  enable_automatic_recovery: false
  recovery_timeout_minutes: 60
  recovery_validation_checks: true
  rollback_on_failure: true

# Integration Settings
integration:
  ci_cd_integration: false
  slack_notifications: false
  email_notifications: false
  custom_scripts:
    pre_operation: ""
    post_operation: ""
    on_failure: ""
