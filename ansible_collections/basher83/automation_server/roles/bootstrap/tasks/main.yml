- name: Wait for system to become reachable
  ansible.builtin.wait_for_connection:
    delay: 10
    timeout: 300

# Enhanced Python installation with DebOps patterns
- name: Install Python for Ansible (with APT cache management)
  ansible.builtin.raw: |
    # Check if APT cache is recent (within 60 minutes)
    if [ ! -f /var/cache/apt/pkgcache.bin ] || [ -z "$(find /var/cache/apt/pkgcache.bin -mmin -60 2>/dev/null)" ]; then
        echo "Updating APT cache..."
        apt-get -q update
    fi
    # Install Python 3 and essential packages if not present
    if ! command -v python3 >/dev/null 2>&1; then
        echo "Installing Python 3..."
        LANG=C apt-get --no-install-recommends -yq install python3 python3-apt python3-setuptools
    fi
  register: bootstrap_python_install_result
  changed_when: "'Installing Python 3' in bootstrap_python_install_result.stdout"
  retries: 3
  delay: 10
  until: bootstrap_python_install_result.rc == 0

# Critical: Reset connection after Python installation
- name: Reset connection after Python installation  # noqa: no-handler
  ansible.builtin.meta: reset_connection
  when: bootstrap_python_install_result.changed

- name: Gather facts after Python installation
  ansible.builtin.setup:

- name: Ensure ansible user exists
  ansible.builtin.user:
    name: ansible
    groups: sudo
    shell: /bin/bash
    create_home: yes
    state: present

- name: Configure sudo for ansible user
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/ansible
    line: 'ansible ALL=(ALL) NOPASSWD:ALL'
    create: yes
    validate: 'visudo -cf %s'
    mode: '0440'

- name: Set hostname
  ansible.builtin.hostname:
    name: jump-man

- name: Update /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "127.0.1.1 jump-man"
    state: present

- name: Verify network connectivity
  ansible.builtin.uri:
    url: https://api.github.com
    method: GET
    status_code: 200
    timeout: 10
  register: bootstrap_github_check
  failed_when: false
  retries: 3
  delay: 5

- name: Report connectivity status
  ansible.builtin.debug:
    msg: "External connectivity: {{ 'OK' if bootstrap_github_check.status == 200 else 'FAILED' }}"

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install essential packages
  ansible.builtin.apt:
    name: "{{ bootstrap_essential_packages }}"
    state: present
  retries: 3
  delay: 10

- name: Set timezone
  community.general.timezone:
    name: UTC

- name: Enable systemd-resolved
  ansible.builtin.systemd:
    name: systemd-resolved
    enabled: yes
    state: started

- name: Create systemd-resolved configuration directory
  ansible.builtin.file:
    path: /etc/systemd/resolved.conf.d
    state: directory
    mode: '0755'

- name: Configure DNS (Ubuntu 24.04 pattern)
  ansible.builtin.copy:
    content: |
      # Ubuntu 24.04 systemd-resolved configuration
      [Resolve]
      DNS={{ bootstrap_dns_servers | join(' ') }}
      FallbackDNS={{ bootstrap_dns_fallback | join(' ') }}
      DNSSEC=allow-downgrade
      DNSOverTLS=opportunistic
      Cache=yes
      DNSStubListener=yes
    dest: /etc/systemd/resolved.conf.d/99-bootstrap.conf
    mode: '0644'
  notify: Restart systemd-resolved

- name: Ensure resolv.conf points to systemd-resolved
  ansible.builtin.file:
    src: /run/systemd/resolve/resolv.conf
    dest: /etc/resolv.conf
    state: link
    force: yes

- name: Create directory structure
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /opt/scripts
    - /opt/configs
    - /var/log/ansible
    - /etc/ansible/facts.d

- name: Save bootstrap completion fact
  ansible.builtin.copy:
    content: |
      {
        "bootstrap_completed": true,
        "bootstrap_date": "{{ ansible_date_time.iso8601 }}",
        "bootstrap_version": "1.0.0"
      }
    dest: /etc/ansible/facts.d/bootstrap.fact
    mode: '0644'

- name: Save bootstrap completion marker
  ansible.builtin.file:
    path: /var/lib/ansible_bootstrap_complete
    state: touch
    modification_time: preserve
    access_time: preserve
    mode: '0644'
