---
# Security validation tasks

- name: Initialize validation results
  ansible.builtin.set_fact:
    security_validation_results: []
    security_validation_failed: []

- name: Validate SSH configuration
  block:
    - name: Test SSH configuration syntax
      ansible.builtin.command: sshd -t
      register: ssh_config_test
      changed_when: false
      failed_when: false

    - name: Record SSH validation result
      ansible.builtin.set_fact:
        security_validation_results: "{{ security_validation_results + ['SSH Configuration: ' + ('PASS' if ssh_config_test.rc == 0 else 'FAIL')] }}"

    - name: Check SSH service status
      ansible.builtin.systemd:
        name: sshd
        state: started
      check_mode: true
      register: ssh_service_status
      failed_when: false

    - name: Record SSH service result
      ansible.builtin.set_fact:
        security_validation_results: "{{ security_validation_results + ['SSH Service: ' + ('RUNNING' if ssh_service_status.changed == false else 'STOPPED')] }}"

- name: Validate fail2ban configuration
  block:
    - name: Check fail2ban status
      ansible.builtin.command: fail2ban-client status
      register: fail2ban_status
      changed_when: false
      failed_when: false

    - name: Record fail2ban result
      ansible.builtin.set_fact:
        security_validation_results: "{{ security_validation_results + ['Fail2ban: ' + ('ACTIVE' if fail2ban_status.rc == 0 else 'INACTIVE')] }}"

    - name: Check SSH jail status
      ansible.builtin.command: fail2ban-client status sshd
      register: ssh_jail_status
      changed_when: false
      failed_when: false
      when: fail2ban_status.rc == 0

    - name: Record SSH jail result
      ansible.builtin.set_fact:
        security_validation_results: "{{ security_validation_results + ['SSH Jail: ' + ('ACTIVE' if ssh_jail_status.rc == 0 else 'INACTIVE')] }}"
      when: fail2ban_status.rc == 0
  when: security_fail2ban_enabled

- name: Validate audit configuration
  block:
    - name: Check auditd status
      ansible.builtin.command: auditctl -s
      register: audit_status
      changed_when: false
      failed_when: false

    - name: Record audit result
      ansible.builtin.set_fact:
        security_validation_results: "{{ security_validation_results + ['Auditd: ' + ('ACTIVE' if audit_status.rc == 0 else 'INACTIVE')] }}"

    - name: Count audit rules
      ansible.builtin.shell: auditctl -l | wc -l
      register: audit_rules_count
      changed_when: false
      failed_when: false

    - name: Record audit rules count
      ansible.builtin.set_fact:
        security_validation_results: "{{ security_validation_results + ['Audit Rules: ' + audit_rules_count.stdout + ' rules loaded'] }}"
  when: security_auditd_enabled

- name: Validate kernel parameters
  block:
    - name: Check key kernel parameters
      ansible.builtin.command: sysctl {{ item }}
      register: kernel_params
      changed_when: false
      failed_when: false
      loop:
        - net.ipv4.ip_forward
        - net.ipv4.tcp_syncookies
        - kernel.randomize_va_space

    - name: Record kernel parameter results
      ansible.builtin.set_fact:
        security_validation_results: "{{ security_validation_results + ['Kernel Parameters: CONFIGURED'] }}"
  when: security_kernel_hardening_enabled

- name: Check AppArmor status
  block:
    - name: Get AppArmor status
      ansible.builtin.command: aa-status --json
      register: apparmor_status
      changed_when: false
      failed_when: false

    - name: Record AppArmor result
      ansible.builtin.set_fact:
        security_validation_results: "{{ security_validation_results + ['AppArmor: ENABLED'] }}"
      when: apparmor_status.rc == 0
  when: security_apparmor_enabled

- name: Check password quality configuration
  block:
    - name: Verify pwquality configuration
      ansible.builtin.stat:
        path: /etc/security/pwquality.conf
      register: pwquality_file

    - name: Record password quality result
      ansible.builtin.set_fact:
        security_validation_results: "{{ security_validation_results + ['Password Quality: ' + ('CONFIGURED' if pwquality_file.stat.exists else 'NOT CONFIGURED')] }}"
  when: security_password_quality_enabled

- name: Check automatic updates
  block:
    - name: Check unattended-upgrades status
      ansible.builtin.systemd:
        name: unattended-upgrades
        state: started
      check_mode: true
      register: updates_status
      failed_when: false

    - name: Record automatic updates result
      ansible.builtin.set_fact:
        security_validation_results: "{{ security_validation_results + ['Automatic Updates: ' + ('ENABLED' if updates_status.changed == false else 'DISABLED')] }}"
  when: security_automatic_updates_enabled

- name: Check file permissions
  block:
    - name: Verify critical file permissions
      ansible.builtin.stat:
        path: "{{ item.path }}"
      register: file_perms
      loop: "{{ security_sensitive_files }}"
      failed_when: false

    - name: Validate file permissions match
      ansible.builtin.set_fact:
        security_validation_results: "{{ security_validation_results + ['File Permissions: VERIFIED'] }}"
  when: security_file_permissions_enabled

- name: Run custom validation commands
  ansible.builtin.command: "{{ item.command }}"
  register: custom_validations
  changed_when: false
  failed_when: false
  loop: "{{ security_validation_commands }}"
  when: security_validation_commands is defined

- name: Calculate validation score
  ansible.builtin.set_fact:
    validation_passed: "{{ security_validation_results | select('search', 'PASS|ACTIVE|ENABLED|CONFIGURED|VERIFIED|RUNNING') | list | length }}"
    validation_total: "{{ security_validation_results | length }}"

- name: Display validation results
  ansible.builtin.debug:
    msg: |
      ====================================
      Security Validation Results
      ====================================
      {% for result in security_validation_results %}
      {{ result }}
      {% endfor %}
      ====================================
      Score: {{ validation_passed }}/{{ validation_total }}
      Status: {{ 'PASSED' if validation_passed == validation_total else 'NEEDS ATTENTION' }}
      ====================================
