---
# Docker resource management tasks

- name: Configure Docker cleanup cron job
  ansible.builtin.cron:
    name: "Docker system prune"
    minute: "0"
    hour: "2"
    job: "docker system prune -af --volumes --filter 'until={{ docker_cleanup_retention_hours }}h' > /dev/null 2>&1"
    user: root
    state: "{{ 'present' if docker_enable_cleanup_cron else 'absent' }}"
  become: true

# Note: Log rotation is configured in configuration.yml via daemon.json
# Docker handles log rotation internally when using json-file or local drivers
# with max-size and max-file options. This is the recommended approach per
# Docker best practices - no external logrotate needed.
# Reference: https://docs.docker.com/engine/logging/drivers/json-file/

- name: Set Docker storage driver limits
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: true
  loop:
    - { key: 'fs.inotify.max_user_watches', value: '524288' }
    - { key: 'fs.inotify.max_user_instances', value: '512' }
  become: true
  when: docker_configure_sysctl | bool

- name: Configure Docker memory limits
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX_DEFAULT='
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet cgroup_enable=memory swapaccount=1"'
    backup: true
  become: true
  when: docker_enable_memory_limits | bool
  notify: update grub

- name: Monitor Docker disk usage
  ansible.builtin.command: docker system df
  register: docker_disk_usage
  changed_when: false
  when: docker_debug_mode | bool

- name: Display Docker disk usage
  ansible.builtin.debug:
    msg: "{{ docker_disk_usage.stdout_lines }}"
  when: docker_debug_mode | bool
