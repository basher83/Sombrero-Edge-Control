---
# Verify node has sufficient resources

- name: Get node status and resources
  community.proxmox.proxmox_node_info:
    api_host: "{{ proxmox_api_url | urlsplit('hostname') }}"
    api_port: "{{ proxmox_api_url | urlsplit('port') | default(8006) }}"
    api_user: "{{ proxmox_api_token_id.split('!')[0] }}"
    api_token_id: "{{ proxmox_api_token_id.split('!')[1] }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    validate_certs: "{{ proxmox_verify_ssl }}"
    node: "{{ proxmox_node }}"
  register: node_status
  when: api_connectivity_passed | default(false)

- name: Calculate available resources
  set_fact:
    available_memory_mb: "{{ ((node_status.proxmox_node_info.memory.free | default(0)) / 1024 / 1024) | int }}"
    available_cpu_cores: "{{ node_status.proxmox_node_info.cpuinfo.cpus | default(0) }}"
    cpu_usage_percent: "{{ (node_status.proxmox_node_info.cpu | default(0) * 100) | round(2) }}"
  when:
    - api_connectivity_passed | default(false)
    - node_status is not failed

- name: Get storage information
  community.proxmox.proxmox_storage_info:
    api_host: "{{ proxmox_api_url | urlsplit('hostname') }}"
    api_port: "{{ proxmox_api_url | urlsplit('port') | default(8006) }}"
    api_user: "{{ proxmox_api_token_id.split('!')[0] }}"
    api_token_id: "{{ proxmox_api_token_id.split('!')[1] }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    validate_certs: "{{ proxmox_verify_ssl }}"
    node: "{{ proxmox_node }}"
  register: storage_info
  when: api_connectivity_passed | default(false)

- name: Calculate available storage
  set_fact:
    available_storage_gb: "{{ ((storage_info.proxmox_storage_info | selectattr('storage', 'equalto', 'local-lvm') | first).avail | default(0) / 1024 / 1024 / 1024) | int }}"
  when:
    - api_connectivity_passed | default(false)
    - storage_info is not failed
    - storage_info.proxmox_storage_info is defined

- name: Check resource adequacy
  set_fact:
    node_resources_adequate: true
  when:
    - available_memory_mb | default(0) | int >= minimum_memory_mb
    - available_cpu_cores | default(0) | int >= minimum_cpu_cores
    - available_storage_gb | default(0) | int >= minimum_storage_gb
    - cpu_usage_percent | default(100) | float < 90

- name: Display resource status
  debug:
    msg:
      - "Node Resource Status:"
      - "  Available Memory: {{ available_memory_mb | default('Unknown') }} MB (Required: {{ minimum_memory_mb }} MB)"
      - "  CPU Cores: {{ available_cpu_cores | default('Unknown') }} (Required: {{ minimum_cpu_cores }})"
      - "  CPU Usage: {{ cpu_usage_percent | default('Unknown') }}%"
      - "  Available Storage: {{ available_storage_gb | default('Unknown') }} GB (Required: {{ minimum_storage_gb }} GB)"
      - "  Resources Adequate: {{ 'YES' if node_resources_adequate | default(false) else 'NO' }}"

- name: Fail if resources insufficient
  fail:
    msg: "Node {{ proxmox_node }} has insufficient resources for deployment"
  when:
    - not (node_resources_adequate | default(false))
    - fail_on_insufficient_resources | default(true)
