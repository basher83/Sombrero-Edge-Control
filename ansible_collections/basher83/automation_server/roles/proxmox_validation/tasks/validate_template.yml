---
# Validate VM template exists

- name: Get list of VM templates
  community.proxmox.proxmox_vm_info:
    api_host: "{{ proxmox_api_url | urlsplit('hostname') }}"
    api_port: "{{ proxmox_api_url | urlsplit('port') | default(8006) }}"
    api_user: "{{ proxmox_api_token_id.split('!')[0] }}"
    api_token_id: "{{ proxmox_api_token_id.split('!')[1] }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    validate_certs: "{{ proxmox_verify_ssl }}"
    node: "{{ proxmox_node }}"
    type: qemu
  register: vm_list
  when: api_connectivity_passed | default(false)

- name: Filter for templates
  set_fact:
    templates: "{{ vm_list.proxmox_vms | default([]) | selectattr('template', 'defined') | selectattr('template', 'equalto', 1) | list }}"
  when:
    - api_connectivity_passed | default(false)
    - vm_list is not failed

- name: Check for required template by ID
  set_fact:
    template_by_id: "{{ templates | selectattr('vmid', 'equalto', required_template_id | int) | list | first | default({}) }}"
    template_exists: false
  when: templates is defined

- name: Check for template by name pattern
  set_fact:
    template_by_name: "{{ templates | selectattr('name', 'match', template_name_pattern) | list }}"
  when:
    - templates is defined
    - template_name_pattern is defined

- name: Set template existence status
  set_fact:
    template_exists: true
    found_template_id: "{{ template_by_id.vmid | default(template_by_name[0].vmid | default(none)) }}"
    found_template_name: "{{ template_by_id.name | default(template_by_name[0].name | default('Not found')) }}"
  when:
    - template_by_id.vmid is defined or (template_by_name | default([]) | length > 0)

- name: Display template validation results
  debug:
    msg:
      - "Template Validation:"
      - "  Required Template ID: {{ required_template_id }}"
      - "  Template Name Pattern: {{ template_name_pattern }}"
      - "  Template Found: {{ 'YES' if template_exists | default(false) else 'NO' }}"
      - "  Found Template: {{ found_template_name | default('None') }} (ID: {{ found_template_id | default('N/A') }})"

- name: List available templates if required template not found
  debug:
    msg:
      - "Available templates on node {{ proxmox_node }}:"
      - "{{ templates | map(attribute='name') | list }}"
  when:
    - not (template_exists | default(false))
    - templates | length > 0

- name: Fail if required template not found
  fail:
    msg: "Required template (ID: {{ required_template_id }} or pattern: {{ template_name_pattern | default('N/A') }}) not found on node {{ proxmox_node }}"
  when:
    - not (template_exists | default(false))
    - fail_on_missing_template | default(true)
