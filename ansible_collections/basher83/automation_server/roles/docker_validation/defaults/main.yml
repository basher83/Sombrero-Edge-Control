#SPDX-License-Identifier: MIT
---
# Docker Validation Role Configuration

# Validation phases to execute (all enabled by default)
docker_validation_phases:
  - engine_validation
  - container_validation
  - image_validation
  - compose_validation
  - security_validation
  - monitoring_integration

# Docker Engine Requirements
docker_min_version: "20.10.0"           # Minimum Docker version required
docker_max_version: ""                  # Maximum version (empty = no limit)
docker_api_version: ""                  # Specific API version (empty = auto)

# Docker Engine Health Thresholds
docker_max_cpu_usage: 80               # Maximum Docker daemon CPU usage %
docker_max_memory_usage: 85            # Maximum Docker daemon memory usage %
docker_min_disk_space_gb: 5            # Minimum available disk space in GB
docker_max_container_count: 100        # Maximum number of containers

# Container Validation Settings
expected_containers: []
# Example:
# expected_containers:
#   - name: "nginx"
#     state: "running"                  # running, stopped, paused, exited
#     health_status: "healthy"          # healthy, unhealthy, none
#     restart_policy: "always"          # no, on-failure, always, unless-stopped
#     max_cpu_percent: 50               # Maximum CPU usage for this container
#     max_memory_mb: 512                # Maximum memory usage in MB
#   - name: "postgres"
#     state: "running"
#     health_status: "healthy"
#     restart_policy: "always"
#     required_env_vars: ["POSTGRES_DB", "POSTGRES_USER"]

# Image Validation Settings
expected_images: []
# Example:
# expected_images:
#   - name: "nginx:latest"
#     required: true                    # Must be present
#     max_size_mb: 200                  # Maximum image size in MB
#     pull_policy: "missing"            # always, missing, never
#   - name: "postgres:13"
#     required: true
#     max_size_mb: 500
#     registry: "registry.internal.com"

# Docker Compose Stack Validation
docker_compose_stacks: []
# Example:
# docker_compose_stacks:
#   - path: "/opt/app/docker-compose.yml"
#     services_expected: ["web", "db", "cache"]
#     networks_expected: ["app_network"]
#     volumes_expected: ["app_data", "db_data"]
#     validate_health_checks: true

# Registry Configuration
docker_registries: []
# Example:
# docker_registries:
#   - url: "registry.internal.com"
#     username: "{{ vault_registry_user }}"
#     password: "{{ vault_registry_pass }}"
#     validate_ssl: true
#     timeout: 30

# Security Validation Settings
security_validation:
  check_privileged_containers: true    # Validate no privileged containers
  check_root_user: true               # Validate containers not running as root
  validate_user_namespaces: true      # Check user namespace configuration
  check_capabilities: true            # Validate container capabilities
  validate_seccomp: true              # Check seccomp profiles
  check_read_only_root: true          # Validate read-only root filesystems

# Network Validation
network_validation:
  expected_networks: []               # List of expected Docker networks
  validate_bridge_config: true       # Validate Docker bridge configuration
  check_port_conflicts: true         # Check for port binding conflicts
  validate_dns_config: true          # Validate DNS configuration

# Volume and Storage Validation
storage_validation:
  expected_volumes: []                # List of expected Docker volumes
  check_volume_permissions: true     # Validate volume mount permissions
  validate_storage_driver: true      # Check storage driver configuration
  max_volume_size_gb: 100            # Maximum individual volume size

# Performance Monitoring Settings
performance_monitoring:
  enable_resource_monitoring: true   # Enable container resource monitoring
  cpu_alert_threshold: 80            # CPU usage alert threshold
  memory_alert_threshold: 85         # Memory usage alert threshold
  disk_io_alert_threshold: 90        # Disk I/O alert threshold
  network_io_alert_threshold: 90     # Network I/O alert threshold

# Monitoring Integration
monitoring_integration:
  enable_prometheus: false           # Enable Prometheus metrics collection
  enable_cadvisor: false            # Deploy cAdvisor for container metrics
  prometheus_port: 9090              # Prometheus server port
  cadvisor_port: 8080               # cAdvisor metrics port
  monitoring_endpoints: []
  # Example:
  # monitoring_endpoints:
  #   - url: "http://localhost:8080/metrics"
  #     expected_status: 200
  #     timeout: 30

# Log Validation Settings
log_validation:
  check_container_logs: true         # Validate container log accessibility
  log_driver_validation: true       # Check log driver configuration
  max_log_size_mb: 100              # Maximum log file size per container
  log_rotation_validation: true     # Validate log rotation configuration
  error_log_patterns:               # Patterns to search for in logs
    - "ERROR"
    - "FATAL"
    - "CRITICAL"

# Validation Behavior
validation_config:
  fail_fast: false                   # Stop validation on first failure
  parallel_validation: true         # Run validations in parallel where possible
  timeout_seconds: 300               # Default timeout for validation tasks
  retry_count: 3                     # Number of retries for failed validations
  retry_delay: 5                     # Delay between retries in seconds
  collect_debug_info: true          # Collect additional debug information

# Reporting Configuration
reporting:
  generate_json_report: true         # Generate JSON validation report
  generate_html_report: false       # Generate HTML validation report
  report_path: "/tmp"                # Path to store validation reports
  log_level: "info"                 # Logging level: debug, info, warn, error
  include_performance_metrics: true # Include performance data in reports

# Docker Daemon Configuration Validation
daemon_config_validation:
  validate_daemon_config: true      # Validate /etc/docker/daemon.json
  required_config_keys: []          # List of required configuration keys
  forbidden_config_keys: []         # List of forbidden configuration keys
  storage_driver_whitelist:         # Allowed storage drivers
    - "overlay2"
    - "devicemapper"
  logging_driver_whitelist:         # Allowed logging drivers
    - "json-file"
    - "journald"
    - "syslog"

# Cleanup and Maintenance
cleanup_validation:
  check_disk_usage: true            # Validate Docker disk usage
  validate_image_cleanup: true      # Check for unused images
  check_container_cleanup: true     # Validate stopped container cleanup
  validate_volume_cleanup: true     # Check for unused volumes
  max_unused_images: 5              # Maximum number of unused images allowed
  max_stopped_containers: 3         # Maximum number of stopped containers
