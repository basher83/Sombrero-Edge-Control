---
# Mise (formerly rtx) version manager installation
# Custom installation since no quality Ansible collection exists

- name: Check if mise is already installed
  ansible.builtin.stat:
    path: "{{ devtools_mise_install_path }}"
  register: mise_binary

- name: Get current mise version
  ansible.builtin.command: "{{ devtools_mise_install_path }} --version"
  register: mise_current_version
  changed_when: false
  failed_when: false
  when: mise_binary.stat.exists

- name: Download and install mise
  block:
    - name: Create temporary directory for mise installation
      ansible.builtin.tempfile:
        state: directory
      register: mise_temp_dir

    - name: Download mise installation script
      ansible.builtin.get_url:
        url: "https://mise.run"
        dest: "{{ mise_temp_dir.path }}/install.sh"
        mode: '0755'
        timeout: 30

    - name: Install mise
      ansible.builtin.shell: |
        export MISE_INSTALL_PATH="{{ devtools_mise_install_path }}"
        bash "{{ mise_temp_dir.path }}/install.sh"
      environment:
        MISE_INSTALL_PATH: "{{ devtools_mise_install_path }}"
      register: mise_install_result
      changed_when: "'mise installed' in mise_install_result.stdout"

    - name: Cleanup temporary directory
      ansible.builtin.file:
        path: "{{ mise_temp_dir.path }}"
        state: absent
      when: mise_temp_dir.path is defined

  when: >
    not mise_binary.stat.exists or
    (devtools_mise_version == "latest" and mise_current_version.rc != 0)

- name: Ensure mise binary is executable
  ansible.builtin.file:
    path: "{{ devtools_mise_install_path }}"
    mode: '0755'
    owner: root
    group: root

- name: Create mise configuration directory
  ansible.builtin.file:
    path: "{{ devtools_mise_config_dir }}"
    state: directory
    owner: "{{ devtools_user }}"
    group: "{{ devtools_user }}"
    mode: '0755'

- name: Create mise data directory
  ansible.builtin.file:
    path: "/home/{{ devtools_user }}/.local/share/mise"
    state: directory
    owner: "{{ devtools_user }}"
    group: "{{ devtools_user }}"
    mode: '0755'

- name: Initialize mise configuration
  ansible.builtin.copy:
    content: |
      # Mise configuration
      [settings]
      experimental = true
      legacy_version_file = true

      [aliases]
      nodejs = "node"
    dest: "{{ devtools_mise_config_dir }}/config.toml"
    owner: "{{ devtools_user }}"
    group: "{{ devtools_user }}"
    mode: '0644'

- name: Add mise to PATH and shell integration
  ansible.builtin.blockinfile:
    path: "/home/{{ devtools_user }}/.bashrc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - Mise"
    block: |
      # Mise version manager
      export PATH="{{ devtools_mise_install_path | dirname }}:$PATH"
      export MISE_CONFIG_DIR="{{ devtools_mise_config_dir }}"
      export MISE_DATA_DIR="/home/{{ devtools_user }}/.local/share/mise"

      # Initialize mise
      if command -v mise >/dev/null 2>&1; then
        eval "$(mise activate bash)"
      fi
    create: true
  become_user: "{{ devtools_user }}"

- name: Create mise wrapper script for easier access
  ansible.builtin.copy:
    content: |
      #!/bin/bash
      # Mise wrapper script
      export MISE_CONFIG_DIR="{{ devtools_mise_config_dir }}"
      export MISE_DATA_DIR="/home/{{ devtools_user }}/.local/share/mise"
      exec {{ devtools_mise_install_path }} "$@"
    dest: "/usr/local/bin/mise"
    mode: '0755'
    owner: root
    group: root

- name: Verify mise installation
  ansible.builtin.command: mise --version
  register: mise_version_check
  changed_when: false
  failed_when: false

- name: Display mise installation result
  ansible.builtin.debug:
    msg: "Mise installed successfully: {{ mise_version_check.stdout }}"
  when: mise_version_check.rc == 0

- name: Install common runtime versions via mise
  ansible.builtin.shell: |
    export MISE_CONFIG_DIR="{{ devtools_mise_config_dir }}"
    export MISE_DATA_DIR="/home/{{ devtools_user }}/.local/share/mise"
    mise use --global node@lts
    mise use --global python@latest
  become_user: "{{ devtools_user }}"
  register: mise_runtime_install
  changed_when: "'installed' in mise_runtime_install.stdout"
  failed_when: false
