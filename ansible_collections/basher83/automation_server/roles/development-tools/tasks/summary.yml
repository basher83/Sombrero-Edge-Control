---
# Generate development tools installation summary

- name: Gather installation information
  ansible.builtin.set_fact:
    devtools_summary_timestamp: "{{ ansible_date_time.iso8601 }}"
    devtools_summary_hostname: "{{ ansible_hostname }}"
    devtools_summary_user: "{{ devtools_user }}"

- name: Get installed tool versions
  ansible.builtin.shell: "{{ item.command }}"
  register: tool_versions
  changed_when: false
  failed_when: false
  loop:
    - { name: "Node.js", command: "node --version 2>/dev/null || echo 'Not installed'" }
    - { name: "npm", command: "npm --version 2>/dev/null || echo 'Not installed'" }
    - { name: "Python", command: "python3 --version 2>/dev/null || echo 'Not installed'" }
    - { name: "pip", command: "pip3 --version 2>/dev/null || echo 'Not installed'" }
    - { name: "mise", command: "mise --version 2>/dev/null || echo 'Not installed'" }
    - { name: "uv", command: "uv --version 2>/dev/null || echo 'Not installed'" }
    - { name: "Docker Compose", command: "docker-compose --version 2>/dev/null || echo 'Not installed'" }

- name: Count installed npm packages
  ansible.builtin.shell: npm list -g --depth=0 2>/dev/null | grep -c "├──\\|└──" || echo 0
  register: npm_packages_count
  changed_when: false
  failed_when: false

- name: Count installed pip packages
  ansible.builtin.shell: pip3 list 2>/dev/null | wc -l || echo 0
  register: pip_packages_count
  changed_when: false
  failed_when: false

- name: Generate development tools summary content
  ansible.builtin.set_fact:
    devtools_summary_content: |
      ================================================
      DEVELOPMENT TOOLS INSTALLATION SUMMARY
      ================================================
      Generated: {{ devtools_summary_timestamp }}
      Hostname: {{ devtools_summary_hostname }}
      User: {{ devtools_summary_user }}
      Ansible Version: {{ ansible_version.full }}

      ================================================
      INSTALLED TOOLS AND VERSIONS
      ================================================
      {% for result in tool_versions.results %}
      {{ result.item.name }}: {{ result.stdout }}
      {% endfor %}

      ================================================
      PACKAGE MANAGERS
      ================================================
      npm global packages: {{ npm_packages_count.stdout }}
      pip packages: {{ pip_packages_count.stdout }}

      Global npm packages installed:
      {% for package in devtools_npm_global_packages %}
      - {{ package }}
      {% endfor %}

      pip packages installed:
      {% for package in devtools_pip_packages %}
      - {{ package }}
      {% endfor %}

      ================================================
      MODERN DEVELOPMENT TOOLS
      ================================================
      mise (version manager): {{ 'Enabled' if devtools_mise_enabled else 'Disabled' }}
      {% if devtools_mise_enabled %}
      - Config directory: {{ devtools_mise_config_dir }}
      - Data directory: /home/{{ devtools_user }}/.local/share/mise
      {% endif %}

      uv (Python package manager): {{ 'Enabled' if devtools_uv_enabled else 'Disabled' }}
      {% if devtools_uv_enabled %}
      - Config directory: /home/{{ devtools_user }}/.config/uv
      - Cache directory: /home/{{ devtools_user }}/.cache/uv
      {% endif %}

      ================================================
      ADDITIONAL TOOLS
      ================================================
      {% for tool in devtools_additional_tools %}
      - {{ tool.name }}: {{ tool.description }}
      {% endfor %}

      ================================================
      SHELL CONFIGURATION
      ================================================
      Enhanced bash prompt: ✓
      Git integration: ✓
      Development aliases: ✓
      History settings: ✓
      readline configuration: ✓
      vim configuration: ✓
      tmux configuration: ✓

      ================================================
      WORKSPACE SETUP
      ================================================
      Workspace directory: /home/{{ devtools_user }}/workspace
      Projects directory: /home/{{ devtools_user }}/projects
      Scripts directory: /home/{{ devtools_user }}/scripts
      Development environment script: /home/{{ devtools_user }}/setup-dev-env.sh

      ================================================
      VALIDATION RESULTS
      ================================================
      {% if devtools_validation_results is defined %}
      {% for result in devtools_validation_results %}
      {{ '✓' if result.passed else '✗' }} {{ result.name }}: {{ result.actual }}
      {% endfor %}

      Score: {{ validation_passed | default(0) }}/{{ validation_total | default(0) }}
      {% endif %}

      ================================================
      USAGE INSTRUCTIONS
      ================================================
      1. Log out and back in to load new shell configuration
      2. Use 'source ~/setup-dev-env.sh' in project directories
      3. mise usage: 'mise use node@18' to install Node.js 18
      4. uv usage: 'uv pip install package' for fast package installs
      5. tmux usage: 'tmux new-session -s dev' to start development session

      ================================================
      TROUBLESHOOTING
      ================================================
      - If tools are not in PATH, restart your shell session
      - Check ~/.bashrc for environment configuration
      - Use 'which <tool>' to verify installation paths
      - Run validation again with ansible tag 'validation'

      ================================================
      END OF SUMMARY
      ================================================

- name: Write development tools summary to file
  ansible.builtin.copy:
    content: "{{ devtools_summary_content }}"
    dest: "{{ devtools_summary_path }}"
    owner: root
    group: root
    mode: '0644'

- name: Display summary location
  ansible.builtin.debug:
    msg: "Development tools summary generated: {{ devtools_summary_path }}"

- name: Display summary to console
  ansible.builtin.debug:
    msg: "{{ devtools_summary_content }}"
  when: ansible_verbosity > 0
