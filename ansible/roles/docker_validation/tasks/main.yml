---
#SPDX-License-Identifier: MIT
# Main tasks for Docker validation role

- name: Initialize Docker validation execution
  ansible.builtin.set_fact:
    docker_validation_results: {}
    docker_validation_start_time: "{{ ansible_date_time.epoch }}"
    docker_validation_failed_count: 0
    docker_validation_passed_count: 0

- name: Display Docker validation configuration
  ansible.builtin.debug:
    msg:
      - "Docker Validation Starting"
      - "Target Host: {{ inventory_hostname }}"
      - "Validation Phases: {{ docker_validation_phases | join(', ') }}"
      - "Start Time: {{ ansible_date_time.iso8601 }}"
  when: reporting.log_level in ['debug', 'info']

- name: Phase 1 - Docker Engine Validation
  include_tasks: engine_validation.yml
  when: "'engine_validation' in docker_validation_phases"
  tags: ['docker_validation', 'engine_validation']

- name: Phase 2 - Container Validation
  include_tasks: container_validation.yml
  when: "'container_validation' in docker_validation_phases"
  tags: ['docker_validation', 'container_validation']

- name: Phase 3 - Image Validation
  include_tasks: image_validation.yml
  when: "'image_validation' in docker_validation_phases"
  tags: ['docker_validation', 'image_validation']

- name: Phase 4 - Docker Compose Stack Validation
  include_tasks: compose_validation.yml
  when: "'compose_validation' in docker_validation_phases"
  tags: ['docker_validation', 'compose_validation']

- name: Phase 5 - Security Validation
  include_tasks: security_validation.yml
  when: "'security_validation' in docker_validation_phases"
  tags: ['docker_validation', 'security_validation']

- name: Phase 6 - Monitoring Integration
  include_tasks: monitoring_integration.yml
  when: "'monitoring_integration' in docker_validation_phases"
  tags: ['docker_validation', 'monitoring_integration']

- name: Generate Docker validation summary
  include_tasks: generate_validation_summary.yml
  tags: ['docker_validation', 'summary']

- name: Display final validation results
  ansible.builtin.debug:
    msg:
      - "Docker Validation Completed"
      - "Target Host: {{ inventory_hostname }}"
      - "Tests Passed: {{ docker_validation_passed_count }}"
      - "Tests Failed: {{ docker_validation_failed_count }}"
      - "Total Duration: {{ (ansible_date_time.epoch | int) - (docker_validation_start_time | int) }} seconds"
      - "Overall Status: {{ 'PASS' if docker_validation_failed_count == 0 else 'FAIL' }}"
  when: reporting.log_level in ['debug', 'info']

- name: Fail playbook if validations failed and fail_fast enabled
  fail:
    msg: "Docker validation failed: {{ docker_validation_failed_count }} validation(s) failed"
  when:
    - docker_validation_failed_count > 0
    - validation_config.fail_fast | default(false)
