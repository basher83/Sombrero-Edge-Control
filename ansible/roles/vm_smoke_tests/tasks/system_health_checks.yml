---
#SPDX-License-Identifier: MIT
# System health validation tasks

- name: Gather system facts for health checks
  setup:
    gather_subset:
      - 'all'
  register: system_facts

- name: Check system load average
  block:
    - name: Get system load average
      ansible.builtin.set_fact:
        current_load_1min: "{{ ansible_loadavg[0] | default(ansible_loadavg['1min'] | default(0)) | float }}"

    - name: Validate system load is within acceptable limits
      ansible.builtin.assert:
        that:
          - current_load_1min <= max_load_average
        fail_msg: "System load too high: {{ current_load_1min }} (max: {{ max_load_average }})"
        success_msg: "System load OK: {{ current_load_1min }}"
      register: load_check_result

    - name: Record load average test result
      ansible.builtin.set_fact:
        smoke_test_results: "{{ smoke_test_results | combine({'load_average': {'status': 'PASS', 'value': current_load_1min, 'threshold': max_load_average}}) }}"
        smoke_test_passed_count: "{{ smoke_test_passed_count + 1 }}"

  rescue:
    - name: Record load average test failure
      ansible.builtin.set_fact:
        smoke_test_results: "{{ smoke_test_results | combine({'load_average': {'status': 'FAIL', 'value': current_load_1min | default('N/A'), 'threshold': max_load_average, 'error': ansible_failed_result.msg}}) }}"
        smoke_test_failed_count: "{{ smoke_test_failed_count + 1 }}"

    - name: Debug load average failure
      ansible.builtin.debug:
        msg: "Load average check failed: {{ ansible_failed_result.msg }}"
      when: test_config.collect_debug_info | default(true)

- name: Check memory availability
  block:
    - name: Calculate memory usage percentage
      ansible.builtin.set_fact:
        memory_free_percent: "{{ (ansible_memfree_mb / ansible_memtotal_mb * 100) | round(2) }}"

    - name: Validate sufficient memory available
      ansible.builtin.assert:
        that:
          - memory_free_percent | float >= min_memory_percent
        fail_msg: "Low memory: {{ memory_free_percent }}% free (min: {{ min_memory_percent }}%)"
        success_msg: "Memory OK: {{ memory_free_percent }}% free"
      register: memory_check_result

    - name: Record memory test result
      ansible.builtin.set_fact:
        smoke_test_results: "{{ smoke_test_results | combine({'memory_usage': {'status': 'PASS', 'free_percent': memory_free_percent, 'free_mb': ansible_memfree_mb, 'total_mb': ansible_memtotal_mb}}) }}"
        smoke_test_passed_count: "{{ smoke_test_passed_count + 1 }}"

  rescue:
    - name: Record memory test failure
      ansible.builtin.set_fact:
        smoke_test_results: "{{ smoke_test_results | combine({'memory_usage': {'status': 'FAIL', 'free_percent': memory_free_percent | default('N/A'), 'threshold': min_memory_percent, 'error': ansible_failed_result.msg}}) }}"
        smoke_test_failed_count: "{{ smoke_test_failed_count + 1 }}"

    - name: Debug memory failure
      ansible.builtin.debug:
        msg: "Memory check failed: {{ ansible_failed_result.msg }}"
      when: test_config.collect_debug_info | default(true)

- name: Check disk space on critical filesystems
  block:
    - name: Check if ansible_mounts is available
      ansible.builtin.set_fact:
        mounts_available: "{{ ansible_mounts is defined }}"

    - name: Validate disk space for critical filesystems
      ansible.builtin.assert:
        that:
          - (item.size_available / item.size_total * 100) >= min_disk_percent
        fail_msg: "Low disk space on {{ item.mount }}: {{ ((item.size_available / item.size_total) * 100) | round(2) }}% free (min: {{ min_disk_percent }}%)"
        success_msg: "Disk space OK on {{ item.mount }}: {{ ((item.size_available / item.size_total) * 100) | round(2) }}% free"
      loop: "{{ ansible_mounts | default([]) }}"
      when:
        - mounts_available
        - item.mount in critical_filesystems
      register: disk_check_results

    - name: Record disk space test results
      ansible.builtin.set_fact:
        smoke_test_results: "{{ smoke_test_results | combine({'disk_space': {'status': 'PASS', 'filesystems': disk_space_details}}) }}"
        smoke_test_passed_count: "{{ smoke_test_passed_count + 1 }}"
      vars:
        disk_space_details: "{{ disk_space_details | default([]) + [{'mount': item.item.mount, 'free_percent': ((item.item.size_available / item.item.size_total) * 100) | round(2), 'free_gb': (item.item.size_available / 1024 / 1024 / 1024) | round(2)}] }}"
      loop: "{{ disk_check_results.results }}"
      when:
        - mounts_available
        - disk_check_results.results is defined

    - name: Skip disk space check if mounts not available
      ansible.builtin.set_fact:
        smoke_test_results: "{{ smoke_test_results | combine({'disk_space': {'status': 'SKIP', 'reason': 'ansible_mounts not available on this platform'}}) }}"
      when: not mounts_available

  rescue:
    - name: Record disk space test failure
      ansible.builtin.set_fact:
        smoke_test_results: "{{ smoke_test_results | combine({'disk_space': {'status': 'FAIL', 'threshold': min_disk_percent, 'error': ansible_failed_result.msg}}) }}"
        smoke_test_failed_count: "{{ smoke_test_failed_count + 1 }}"

    - name: Debug disk space failure
      ansible.builtin.debug:
        msg: "Disk space check failed: {{ ansible_failed_result.msg }}"
      when: test_config.collect_debug_info | default(true)

- name: Test network connectivity
  block:
    - name: Test network connectivity to external hosts
      wait_for:
        host: "{{ item.host }}"
        port: "{{ item.port }}"
        timeout: "{{ item.timeout }}"
      loop: "{{ network_tests }}"
      register: network_test_results

    - name: Record network connectivity test results
      ansible.builtin.set_fact:
        smoke_test_results: "{{ smoke_test_results | combine({'network_connectivity': {'status': 'PASS', 'tests': network_tests}}) }}"
        smoke_test_passed_count: "{{ smoke_test_passed_count + 1 }}"

  rescue:
    - name: Record network connectivity test failure
      ansible.builtin.set_fact:
        smoke_test_results: "{{ smoke_test_results | combine({'network_connectivity': {'status': 'FAIL', 'tests': network_tests, 'error': ansible_failed_result.msg}}) }}"
        smoke_test_failed_count: "{{ smoke_test_failed_count + 1 }}"

    - name: Debug network connectivity failure
      ansible.builtin.debug:
        msg: "Network connectivity check failed: {{ ansible_failed_result.msg }}"
      when: test_config.collect_debug_info | default(true)

- name: Display system health check summary
  ansible.builtin.debug:
    msg:
      - "System Health Check Results:"
      - "  Load Average: {{ smoke_test_results.load_average.status | default('SKIP') }}"
      - "  Memory Usage: {{ smoke_test_results.memory_usage.status | default('SKIP') }}"
      - "  Disk Space: {{ smoke_test_results.disk_space.status | default('SKIP') }}"
      - "  Network Connectivity: {{ smoke_test_results.network_connectivity.status | default('SKIP') }}"
  when: reporting.log_level in ['debug', 'info']
