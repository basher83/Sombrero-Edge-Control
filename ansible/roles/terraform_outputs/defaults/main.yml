---
#SPDX-License-Identifier: MIT
# Terraform Outputs Role - Default Variables

# Primary Terraform Configuration
terraform_project_path: "infrastructure/environments/production"
terraform_state_file: "terraform.tfstate"
terraform_workspace: "default"
terraform_backend_type: "local"  # local, s3, remote, etc.

# Multi-Project Support
terraform_projects: []  # List of project configurations
merge_outputs: false
inventory_per_environment: false

# Output Parsing Configuration
parse_outputs:
  - vm_ip
  - vm_hostname
  - vm_id
  - ssh_user

# Include all outputs if empty
parse_all_outputs: true
exclude_sensitive_outputs: true
output_filtering:
  include_patterns: []
  exclude_patterns:
    - "*_secret"
    - "*_key"
    - "*_password"

# Output Validation
validate_outputs: true
required_outputs: []
output_type_validation: true
fail_on_missing_outputs: false

# Inventory Generation
inventory_generation:
  enabled: true
  output_path: "ansible/inventory/terraform.yml"
  format: "yaml"  # yaml, json, ini
  backup_existing: true
  validate_generated: true

# Host and Group Configuration
host_configuration:
  hostname_source: "vm_hostname"  # Output key to use for hostnames
  ip_source: "vm_ip"              # Output key to use for ansible_host
  default_user: "ubuntu"          # Default ansible_user if not specified
  ssh_key_source: ""              # Output key for SSH private key

group_configuration:
  group_by:
    - environment
    - vm_type
    - region
  default_groups:
    - "terraform_managed"
  group_vars:
    terraform_managed:
      managed_by: "terraform"
      provisioned_with: "ansible"

# Variable Integration
variable_integration:
  enabled: true
  namespace: "tf"  # Prefix for Terraform variables
  convert_types: true
  preserve_original_types: true
  create_facts: true

# Variable Mapping
variable_mapping:
  vm_ip: "ansible_host"
  vm_hostname: "inventory_hostname_short"
  ssh_user: "ansible_user"
  ssh_key_path: "ansible_ssh_private_key_file"

# Variable Transformation
variable_transformation:
  enabled: false
  transformations: {}
  # Example:
  # ip_address: "{{ item | regex_replace('^(.*)', 'host-\\1') }}"

# State Validation
state_validation:
  enabled: true
  check_drift: false
  validate_resources: true
  backup_state: false
  state_backup_location: "/tmp/terraform-state-backups"

# Performance and Caching
performance:
  cache_outputs: true
  cache_duration_minutes: 30
  cache_location: "/tmp/terraform-outputs-cache"
  parallel_processing: false
  max_concurrent_projects: 3

# Error Handling
error_handling:
  ignore_missing_project: false
  ignore_terraform_errors: false
  continue_on_output_errors: true
  retry_attempts: 3
  retry_delay_seconds: 5

# Logging and Debugging
logging:
  log_level: "info"
  log_terraform_commands: false
  log_output_parsing: false
  detailed_logging: false
  log_file: "/tmp/terraform-outputs.log"

# Security Settings
security:
  mask_sensitive_outputs: true
  secure_temp_files: true
  inventory_file_mode: "0644"
  cache_file_mode: "0600"
  validate_file_permissions: true

# Integration Settings
integration:
  ansible_vault_integration: false
  external_inventory_plugins: false
  dynamic_inventory_script: false
  inventory_refresh_webhook: ""

# Template Configuration
template_configuration:
  inventory_template: "inventory.yml.j2"
  custom_templates: {}
  template_variables: {}

# Workspace Management
workspace_management:
  auto_detect_workspace: true
  workspace_mapping: {}
  # Example:
  # production: "prod"
  # staging: "stage"

# Output Processing
output_processing:
  flatten_nested_objects: true
  convert_lists_to_strings: false
  preserve_json_structure: true
  custom_processors: []

# Validation Rules
validation_rules:
  hostname_pattern: "^[a-zA-Z0-9-]+$"
  ip_address_validation: true
  ssh_key_validation: false
  custom_validations: []

# Cleanup Settings
cleanup:
  remove_cache_on_completion: false
  cleanup_temp_files: true
  cleanup_old_inventories: false
  inventory_retention_days: 7

# Environment-Specific Settings
environment_settings:
  development:
    fail_on_errors: false
    detailed_logging: true
  staging:
    validate_outputs: true
    cache_enabled: true
  production:
    validate_outputs: true
    backup_state: true
    fail_on_errors: true
