---
#SPDX-License-Identifier: MIT
# Install Additional Monitoring Tools (Optional)

- name: Check if monitoring tools should be installed
  ansible.builtin.debug:
    msg: "Installing additional monitoring tools for comprehensive diagnostics"
  when: enable_monitoring_tools | bool

- name: Update package cache
  package:
    update_cache: true
  become: true
  when: enable_monitoring_tools | bool

- name: Install monitoring and diagnostic tools
  block:
    - name: Install htop (enhanced process viewer)
      package:
        name: htop
        state: present
      become: true
      when: "'htop' in monitoring_tools"

    - name: Install nethogs (network usage monitor)
      package:
        name: nethogs
        state: present
      become: true
      when: "'nethogs' in monitoring_tools"
      failed_when: false  # Not available on all distributions

    - name: Install ncdu (disk usage analyzer)
      package:
        name: ncdu
        state: present
      become: true
      when: "'ncdu' in monitoring_tools"

    - name: Install lnav (log file navigator)
      package:
        name: lnav
        state: present
      become: true
      when: "'lnav' in monitoring_tools"
      failed_when: false  # Not available on all distributions

    - name: Install iotop (I/O usage monitor)
      package:
        name: iotop
        state: present
      become: true
      when: "'iotop' in monitoring_tools"

    - name: Install dstat (system resource statistics)
      package:
        name: dstat
        state: present
      become: true
      when: "'dstat' in monitoring_tools"
      failed_when: false  # Not available on all distributions

    - name: Install sysstat (system performance tools including iostat)
      package:
        name: sysstat
        state: present
      become: true
      when: performance_analysis.io_testing | bool

    - name: Install net-tools (network utilities like netstat)
      package:
        name: net-tools
        state: present
      become: true

    - name: Install curl and wget (network testing tools)
      package:
        name:
          - curl
          - wget
        state: present
      become: true

  rescue:
    - name: Log monitoring tools installation issues
      ansible.builtin.debug:
        msg: "Some monitoring tools failed to install - this is expected on some distributions"

  when: enable_monitoring_tools | bool

- name: Verify installed monitoring tools
  block:
    - name: Check which monitoring tools are available
      ansible.builtin.command: which {{ item }}
      register: tool_availability
      changed_when: false
      failed_when: false
      loop: "{{ monitoring_tools }}"
      when: enable_monitoring_tools | bool

    - name: Create monitoring tools availability report
      ansible.builtin.set_fact:
        monitoring_tools_status: "{{ tool_availability.results | default([]) | map(attribute='item') | zip(tool_availability.results | default([]) | map(attribute='rc') | map('equalto', 0)) | list }}"
      when: enable_monitoring_tools | bool

    - name: Record monitoring tools installation results
      ansible.builtin.set_fact:
        vm_diagnostic_results: "{{ vm_diagnostic_results | combine({
          'monitoring_tools_installation': {
            'status': 'PASS',
            'tools_requested': monitoring_tools | length,
            'tools_available': monitoring_tools_status | selectattr('1', 'equalto', true) | list | length if monitoring_tools_status is defined else 0,
            'tool_availability': monitoring_tools_status | default([]),
            'installation_note': 'Some tools may not be available on all distributions'
          }
        }) }}"
      when: enable_monitoring_tools | bool

  when: enable_monitoring_tools | bool

- name: Skip monitoring tools installation
  ansible.builtin.set_fact:
    vm_diagnostic_results: "{{ vm_diagnostic_results | combine({
      'monitoring_tools_installation': {
        'status': 'SKIP',
        'reason': 'Monitoring tools installation disabled',
        'enable_monitoring_tools': false
      }
    }) }}"
  when: not (enable_monitoring_tools | bool)
